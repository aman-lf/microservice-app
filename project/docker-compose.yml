version: "3"

services:
  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8000:8000"
    deploy:
      mode: replicated
      replicas: 1
    logging:
      driver: "json-file"

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8001:8000"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    logging:
      driver: "json-file"

  menu-service:
    build:
      context: ./../menu-service
      dockerfile: ./../menu-service/menu-service.dockerfile
    restart: always
    ports:
      - "8002:8000"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=cafe sslmode=disable timezone=UTC connect_timeout=5"
    logging:
      driver: "json-file"

  inventory-service:
    build:
      context: ./../inventory-service
      dockerfile: ./../inventory-service/inventory-service.dockerfile
    restart: always
    ports:
      - "8003:8000"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=cafe sslmode=disable timezone=UTC connect_timeout=5"
    logging:
      driver: "json-file"

  order-service:
    build:
      context: ./../order-service
      dockerfile: ./../order-service/order-service.dockerfile
    restart: always
    ports:
      - "8004:8000"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=cafe sslmode=disable timezone=UTC connect_timeout=5"
    logging:
      driver: "json-file"

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_USERNAME: "admin"
      MONGO_PASSWORD: "password"
    logging:
      driver: "json-file"

  postgres:
    image: "postgres:14.0"
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cafe
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
    logging:
      driver: "json-file"

  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db
    logging:
      driver: "json-file"
